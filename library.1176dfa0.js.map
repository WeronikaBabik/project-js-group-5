{"mappings":"oeAAA,MAAMA,EAAgBC,SAASC,eAAe,iBACxCC,EAAcF,SAASC,eAAe,eAE5CF,EAAcI,iBAAiB,SAAS,WACtCJ,EAAcK,UAAUC,IAAI,UAC5BH,EAAYE,UAAUE,OAAO,S,IAG/BJ,EAAYC,iBAAiB,SAAS,WACpCD,EAAYE,UAAUC,IAAI,UAC1BN,EAAcK,UAAUE,OAAO,S,qCCVjC,IAAAC,EAAAC,EAAA,S,uCAIA,MAAMC,EAAcT,SAASU,cAAc,eACrCC,EAAiBX,SAASU,cAAc,oBACxCE,EAAgBZ,SAASU,cAAc,kBACvCG,EAAcb,SAASU,cAAc,gBAiB3CI,eAAeC,EAA8BC,GAC3CC,EAAAC,KAAKC,cAAcf,UAAUC,IAAI,aACjC,MAAMe,EAAS,GACTC,QAqBR,SAAuBL,GAErB,OADaM,KAAKC,MAAMC,aAAaC,QAAQT,G,CAtB1BU,CAAcV,GAEjC,GAAIK,GAAQA,EAAKM,OAAS,EAGxB,GAFAlB,EAAYmB,UAAY,GACxBX,EAAAC,KAAKC,cAAcf,UAAUC,IAAI,aAC7BgB,GAAQA,EAAKM,OAAS,EAAG,CAC3BE,IAEA,IAAK,IAAIC,EAAI,EAAGA,EAAIT,EAAKM,OAAQG,IAAK,CACpC,MAAMC,EAAWV,EAAKS,GACtB,IAAIE,QAAc,EAAAzB,EAAA0B,mBAAkBF,GACpCG,EAAWF,GACXZ,EAAOe,KAAKH,E,OAGdH,IAGJ,OAAOT,C,CAQT,SAASS,IACPlB,EAAeiB,UAAY,E,CAG7B,SAASM,EAAWb,GAClB,IAAIe,EAAO,GAETA,EADEf,EAAKgB,aACAhB,EAAKgB,aACHhB,EAAKiB,eACPjB,EAAKiB,eAEL,UAET,MAAMC,EAASlB,EAAKmB,YAChB,mCAAmCnB,EAAKmB,cACxC,oGACEC,EAASpB,EAAKoB,OAAOC,KAAIC,GAASA,EAAMC,KAC9CjC,EAAeiB,WAAa,yCAC1BP,EAAKuB,qHAG8DL,iFAE1ClB,EAAKwB,iDACE,EAAAC,EAAAC,UAASN,QAAaL,EAAKY,MAAM,EAAG,kBAEtE,MAAMC,EAAajD,SAASkD,iBAAiB,aACvBD,EAOhBE,SAAQC,IACZA,EAAKjD,iBAAiB,SAAS,MAQnCW,eAAwCuC,GACtC,MAAMC,QAAiBC,MACrB,sCAAoBF,8CAEjBC,EAASE,KACZC,OAAOC,SAASC,OAAOC,QAAQ,2CACf,cAAZP,GACFI,OAAOC,SAASC,OAAOC,QAAQ,kDAGfN,EAASO,M,CAhBPC,CADPV,EAAKW,aAAa,gBAE7B,EAAAC,EAAAC,WAAUb,EAAK,GACf,G,CAnFNnC,EAAAC,KAAKC,cAAcf,UAAUC,IAAI,aAE/BO,EAAYT,iBAAiB,SAAS,KACtCY,EAA8B,gBAAgB,IAG9CF,EAAUV,iBAAiB,SAAS,KACpCY,EAA8B,cAAc,IAG3CmD,OAAI/D,iBAAiB,oBAAoB,KAC1CY,EAA8B,iBAC9BE,EAAAC,KAAKC,cAAcf,UAAUC,IAAI,YAAY","sources":["src/scripts/header-mylibrary.js","src/scripts/show-gallery.js"],"sourcesContent":["const watchedButton = document.getElementById('watchedButton');\nconst queueButton = document.getElementById('queueButton');\n\nwatchedButton.addEventListener('click', function () {\n  watchedButton.classList.add('active');\n  queueButton.classList.remove('active');\n});\n\nqueueButton.addEventListener('click', function () {\n  queueButton.classList.add('active');\n  watchedButton.classList.remove('active');\n});\n","import { getInfoAboutMovie } from './api';\nimport { getGenre } from './genres';\nimport { refs } from './pagination-refs';\n\nconst galleryIcon = document.querySelector('.movie-icon');\nconst galleryLibrary = document.querySelector('.gallery-library');\nconst watchedButton = document.querySelector('#watchedButton');\nconst queueButton = document.querySelector('#queueButton');\n\nrefs.paginationRef.classList.add('is-hidden');\n// Kliknięcie przycisku watched wyświetla watchedMovies\nwatchedButton.addEventListener('click', () => {\n  displayMoviesFromLocalStorage('watchedMovies');\n});\n// Kliknięcie przycisku queue wyświetla queueMovies\nqueueButton.addEventListener('click', () => {\n  displayMoviesFromLocalStorage('queueMovies');\n});\n// Wejście na stronę wyświetla automatycznie watchedMovies\nwindow.addEventListener('DOMContentLoaded', () => {\n  displayMoviesFromLocalStorage('watchedMovies');\n  refs.paginationRef.classList.add('is-hidden');\n});\n\nasync function displayMoviesFromLocalStorage(key) {\n  refs.paginationRef.classList.add('is-hidden');\n  const movies = [];\n  const data = await getDataFromLS(key);\n  //Sprawdzanie czy localstorage jest pusty, jeśli nie jest to galleryIcon znika\n  if (data && data.length > 0) {\n    galleryIcon.innerHTML = '';\n    refs.paginationRef.classList.add('is-hidden');\n    if (data && data.length > 0) {\n      clearGallery();\n\n      for (let i = 0; i < data.length; i++) {\n        const movie_id = data[i];\n        let movie = await getInfoAboutMovie(movie_id);\n        showMovies(movie);\n        movies.push(movie);\n      }\n    } else {\n      clearGallery();\n    }\n  }\n  return movies;\n}\n\nfunction getDataFromLS(key) {\n  const data = JSON.parse(localStorage.getItem(key));\n  return data;\n}\n// Czyszczenie galeri\nfunction clearGallery() {\n  galleryLibrary.innerHTML = '';\n}\n\nfunction showMovies(data) {\n  let date = '';\n  if (data.release_date) {\n    date = data.release_date;\n  } else if (data.first_air_date) {\n    date = data.first_air_date;\n  } else {\n    date = 'No date';\n  }\n  const poster = data.poster_path\n    ? `https://image.tmdb.org/t/p/w500/${data.poster_path}`\n    : `https://upload.wikimedia.org/wikipedia/commons/f/f7/No_Image_%282879926%29_-_The_Noun_Project.svg`;\n  const genres = data.genres.map(genre => genre.id);\n  galleryLibrary.innerHTML += `<li class=\"card tracking\" data-movie=\"${\n    data.id\n  }\">\n    <div class=\"movie__info\">        \n      <img class=\"movie__image\" src=\"https://image.tmdb.org/t/p/w500/${poster}\" alt=\"movie-title\" loading=\"lazy\"/>\n    </div>\n    <p class=\"movie__name\">${data.title}</p>\n    <p class=\"movie__description\">${getGenre(genres)} | ${date.slice(0, 4)}</p>\n  </li>`;\n  const trackingID = document.querySelectorAll('.tracking');\n  addEventToCardLibrary(trackingID);\n}\nimport { showPopUp } from './main-body';\nconst API_KEY = `d793dd4ca6e7be6c8e5a071661ccb72e`;\nconst API_URL = `https://api.themoviedb.org/3`;\n\nfunction addEventToCardLibrary(cards) {\n  cards.forEach(card => {\n    card.addEventListener('click', () => {\n      let text = card.getAttribute('data-movie');\n      let singleMovie = getInfoAboutMovielibrary(text);\n      showPopUp(card);\n    });\n  });\n}\n\nasync function getInfoAboutMovielibrary(movieId) {\n  const response = await fetch(\n    `${API_URL}/movie/${movieId}?api_key=${API_KEY}`\n  );\n  if (!response.ok) {\n    reject(Notiflix.Notify.failure('Oops, there is no movie with that name'));\n    if (movieId === 'undefined') {\n      reject(Notiflix.Notify.failure('Oops, there is no movie with that name'));\n    }\n  }\n  const movie = await response.json();\n  return movie;\n}\n"],"names":["$fd4b38a49a520de1$var$watchedButton","document","getElementById","$fd4b38a49a520de1$var$queueButton","addEventListener","classList","add","remove","$2sKPt","parcelRequire","$e12d98903aaa60fe$var$galleryIcon","querySelector","$e12d98903aaa60fe$var$galleryLibrary","$e12d98903aaa60fe$var$watchedButton","$e12d98903aaa60fe$var$queueButton","async","$e12d98903aaa60fe$var$displayMoviesFromLocalStorage","key","$f19cm","refs","paginationRef","movies","data","JSON","parse","localStorage","getItem","$e12d98903aaa60fe$var$getDataFromLS","length","innerHTML","$e12d98903aaa60fe$var$clearGallery","i","movie_id","movie","getInfoAboutMovie","$e12d98903aaa60fe$var$showMovies","push","date","release_date","first_air_date","poster","poster_path","genres","map","genre","id","title","$YttQV","getGenre","slice","trackingID","querySelectorAll","forEach","card","movieId","response","fetch","ok","reject","Notiflix","Notify","failure","json","$e12d98903aaa60fe$var$getInfoAboutMovielibrary","getAttribute","$22MAz","showPopUp","window"],"version":3,"file":"library.1176dfa0.js.map"}