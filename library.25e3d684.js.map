{"mappings":"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","sources":["src/scripts/header-mylibrary.js","src/scripts/show-gallery.js"],"sourcesContent":["const watchedButton = document.getElementById('watchedButton');\nconst queueButton = document.getElementById('queueButton');\n\nwatchedButton.addEventListener('click', function () {\n  watchedButton.classList.add('active');\n  queueButton.classList.remove('active');\n});\n\nqueueButton.addEventListener('click', function () {\n  queueButton.classList.add('active');\n  watchedButton.classList.remove('active');\n});\n","import { getInfoAboutMovie } from './api';\nimport { getGenre } from './genres';\nimport { refs } from './pagination-refs';\n\nconst galleryIcon = document.querySelector('.movie-icon');\nconst galleryLibrary = document.querySelector('.gallery-library');\nconst watchedButton = document.querySelector('#watchedButton');\nconst queueButton = document.querySelector('#queueButton');\n\nrefs.paginationRef.classList.add('is-hidden');\n// Kliknięcie przycisku watched wyświetla watchedMovies\nwatchedButton.addEventListener('click', () => {\n  displayMoviesFromLocalStorage('watchedMovies');\n});\n// Kliknięcie przycisku queue wyświetla queueMovies\nqueueButton.addEventListener('click', () => {\n  displayMoviesFromLocalStorage('queueMovies');\n});\n// Wejście na stronę wyświetla automatycznie watchedMovies\nwindow.addEventListener('DOMContentLoaded', () => {\n  displayMoviesFromLocalStorage('watchedMovies');\n});\n\nasync function displayMoviesFromLocalStorage(key) {\n  const movies = [];\n  const data = await getDataFromLS(key);\n  //Sprawdzanie czy localstorage jest pusty, jeśli nie jest to galleryIcon znika\n  if (data && data.length > 0) {\n    galleryIcon.innerHTML = '';\n    refs.paginationRef.classList.remove('is-hidden');\n    if (data && data.length > 0) {\n      clearGallery();\n\n      for (let i = 0; i < data.length; i++) {\n        const movie_id = data[i];\n        let movie = await getInfoAboutMovie(movie_id);\n        showMovies(movie);\n        movies.push(movie);\n      }\n    } else {\n      clearGallery();\n    }\n  }\n  return movies;\n}\n\nfunction getDataFromLS(key) {\n  const data = JSON.parse(localStorage.getItem(key));\n  return data;\n}\n// Czyszczenie galeri\nfunction clearGallery() {\n  galleryLibrary.innerHTML = '';\n}\n\nfunction showMovies(data) {\n  let date = '';\n  if (data.release_date) {\n    date = data.release_date;\n  } else if (data.first_air_date) {\n    date = data.first_air_date;\n  } else {\n    date = 'No date';\n  }\n  const poster = data.poster_path\n    ? `https://image.tmdb.org/t/p/w500/${data.poster_path}`\n    : noimage;\n  const genres = data.genres.map(genre => genre.id);\n  galleryLibrary.innerHTML += `<li class=\"card tracking\" data-movie=\"${\n    data.id\n  }\">\n    <div class=\"movie__info\">        \n      <img class=\"movie__image\" src=\"https://image.tmdb.org/t/p/w500/${poster}\" alt=\"movie-title\" loading=\"lazy\"/>\n    </div>\n    <p class=\"movie__name\">${data.title}</p>\n    <p class=\"movie__description\">${getGenre(genres)} | ${date.slice(0, 4)}</p>\n  </li>`;\n  const trackingID = document.querySelectorAll('.tracking');\n  addEventToCardLibrary(trackingID);\n}\nimport { showPopUp } from './main-body';\nconst API_KEY = `d793dd4ca6e7be6c8e5a071661ccb72e`;\nconst API_URL = `https://api.themoviedb.org/3`;\n\nfunction addEventToCardLibrary(cards) {\n  cards.forEach(card => {\n    card.addEventListener('click', () => {\n      let text = card.getAttribute('data-movie');\n      console.log(text);\n      let singleMovie = getInfoAboutMovielibrary(text);\n      console.log(singleMovie);\n      showPopUp(card);\n    });\n  });\n}\n\nasync function getInfoAboutMovielibrary(movieId) {\n  const response = await fetch(\n    `${API_URL}/movie/${movieId}?api_key=${API_KEY}`\n  );\n  if (!response.ok) {\n    reject(Notiflix.Notify.failure('Oops, there is no movie with that name'));\n    if (movieId === 'undefined') {\n      reject(Notiflix.Notify.failure('Oops, there is no movie with that name'));\n    }\n  }\n  const movie = await response.json();\n  return movie;\n}\n"],"names":["$ea2da3e56cc3f0c5$var$watchedButton","document","getElementById","$ea2da3e56cc3f0c5$var$queueButton","addEventListener","classList","add","remove","$bpxeT","parcelRequire","$893c1ce29b843742$var$galleryIcon","querySelector","$893c1ce29b843742$var$galleryLibrary","$893c1ce29b843742$var$watchedButton","$893c1ce29b843742$var$queueButton","$893c1ce29b843742$var$displayMoviesFromLocalStorage","key","$893c1ce29b843742$var$_displayMoviesFromLocalStorage","apply","this","arguments","$parcel$interopDefault","$2TvXO","mark","_callee","movies","data","i","movie_id","movie","$893c1ce29b843742$var$getDataFromLS","_ctx","sent","length","innerHTML","$26D0h","refs","paginationRef","$893c1ce29b843742$var$clearGallery","$2pRc6","getInfoAboutMovie","$893c1ce29b843742$var$showMovies","push","JSON","parse","localStorage","getItem","date","release_date","first_air_date","poster","poster_path","concat","noimage","genres","map","genre","id","title","$1TaP3","getGenre","slice","trackingID","querySelectorAll","forEach","card","text","getAttribute","console","log","singleMovie","movieId","$893c1ce29b843742$var$_getInfoAboutMovielibrary","$893c1ce29b843742$var$getInfoAboutMovielibrary","$lagbz","showPopUp","window","$893c1ce29b843742$var$API_KEY","$893c1ce29b843742$var$API_URL","response","fetch","ok","reject","Notiflix","Notify","failure","json"],"version":3,"file":"library.25e3d684.js.map"}